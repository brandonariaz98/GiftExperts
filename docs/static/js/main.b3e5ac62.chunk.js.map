{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OACI,6BACI,0BAAMC,SAXO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAOV,4BAAMD,GACN,2BACIQ,KAAK,OACLC,MAAQT,EACRU,SApBU,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,aCLlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAGpC,OACI,yBAAKC,UAAW,0CACZ,yBAAKC,IAAKF,EAAKG,IAAMJ,IACrB,+BAAKA,EAAL,O,uBCPCK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACP,mCACNN,EAFa,uDACP,mCADO,uBAE2DO,UAAWF,IAFtE,SAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAZvB,kBAgBZY,GAhBY,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAkBxC,OAXAC,qBAAW,WACPjB,EAASC,GACJiB,MAAM,SAAAC,GACCH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAG1B,CAACb,IAGGc,EDdmBK,CAAcnB,GAAhCM,EAF6B,EAE7BA,KAAMO,EAFuB,EAEvBA,QAId,OACI,oCACI,4BAAKb,GAEHa,GAAW,uBAAGjB,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aACX,4BAEIU,EAAKE,KAAK,SAAAC,GAAG,OACT,kBAAC,EAAD,eACIW,IAAKX,EAAIhB,IACJgB,WEpBpBY,EAAe,WAAM,MAGM1C,mBAAS,CAAC,KAHhB,mBAGvB2C,EAHuB,KAGX5C,EAHW,KAO9B,OACI,6BACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAGA,4BAEQ4C,EAAWd,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACIoB,IAAMpB,EACNA,SAAYA,U,MChBxCuB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b3e5ac62.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if( inputValue.trim().length > 2 ){\n            setCategories( cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <h1>{ inputValue }</h1>\n                <input \n                    type=\"text\"\n                    value={ inputValue }\n                    onChange={ handleInputChange }\n                />\n            </form>\n        </div>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    //console.log(props);\n\n    return (\n        <div className= \"card animate__animated animate__fadeIn\">\n            <img src={url} alt={ title } />\n            <p> {title} </p>\n        </div>\n    );\n}","\nexport const getGifs = async(category) => {\n    const key = 'eNt0KT1ACQcmeBLgv4EdlaWFUBvDjLij';\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${key}&limit=10&q=${encodeURI( category )}`;\n    const resp = await fetch( url );\n    //resp.setHeader(\"Set-Cookie\", \"HttpOnly;Secure;SameSite=Strict\");\n\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n    \n    return gifs;\n\n\n}\n","import React, { useState, useEffect } from 'react'\nimport { GifGridItem } from './GifGridItem';\n//import { getGifs } from '../helpers/getGifs';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data, loading } = useFetchGifs( category );\n    \n    //getGifs();\n\n    return(\n        <>\n            <h3>{category}</h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n\n            <div className='card-grid'>\n                <ol>\n                {\n                    data.map( img => (\n                        <GifGridItem \n                            key={img.id}\n                            { ...img }\n                        />\n                    ))\n                }\n                </ol>\n            </div>\n        </>\n    );\n}","import { useState, useEffect } from \"react\"\nimport {getGifs} from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( category )\n            .then( imgs => {          \n                    setState({\n                        data: imgs,\n                        loading: false\n                    })\n            });\n    }, [category])\n\n\n    return state; // \n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GiftGrid';\nexport const GifExpertApp = () => {\n\n    //const categorias = ['One Punch', 'Samurai X', 'Dragon Ball Z'];\n    const [categories, setCategories] = useState(['']);\n\n\n\n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr />\n\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid \n                            key={ category }\n                            category= { category }\n                        />\n                    ))\n                }\n            </ol>\n\n        </div>\n    );    \n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}